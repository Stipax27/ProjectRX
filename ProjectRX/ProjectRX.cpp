// ProjectRX.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <random>
#include <windows.h>
#include <mmsystem.h>
using namespace std;


// Структуры для диалогов
struct PlayerChoice {
    string text;
    int persuasion; // очки убеждения: 12, 8 или 3
    int nextRound; // следующий раунд
};

struct Round {
    string npcDialog;
    vector<PlayerChoice> choices;
};

// Глобальные переменные
int persuasionScore = 0; // шкала убеждения от 0 до 100
bool hasGold = false; // есть ли у игрока золото
bool provokedFight = false; // был ли спровоцирован бой

// Функция для перемешивания вариантов ответов
vector<PlayerChoice> ShuffleChoices(const vector<PlayerChoice>& choices) {
    vector<PlayerChoice> shuffled = choices;
    random_device rd;
    mt19937 g(rd());
    shuffle(shuffled.begin(), shuffled.end(), g);
    return shuffled;
}

 

// Функция отображения визуальной шкалы убеждения
void DisplayPersuasionMeter() {
    cout << "\n\t\033[37mШкала убеждения:\033[0m\n";
    cout << "\t\033[37m[\033[0m";

    for (int i = 0; i < 100; i += 5) {
        if (i < persuasionScore) {
            // Определяем цвет текущей позиции
            if (i < 50) {
                cout << "\033[31m"; // красный - провал
            }
            else if (i < 80) {
                cout << "\033[32m"; // зеленый - успех
            }
            else {
                cout << "\033[33m"; // желтый - опасная зона
            }

            // Отображаем заполненную часть
            if (i == 50 || i == 79) {
                cout << "||"; // границы зон
            }
            else {
                cout << "//";
            }
        }
        else {
            // Отображаем пустую часть с обозначением зон
            if (i == 50) {
                cout << "\033[32m||\033[37m"; // зеленая граница успеха
            }
            else if (i == 80) {
                cout << "\033[33m||\033[37m"; // желтая граница опасной зоны
            }
            else if (i < 50) {
                cout << "\033[31m--\033[0m"; // красная зона провала
            }
            else if (i < 81) {
                cout << "\033[32m--\033[0m"; // зеленая зона успеха
            }
            else {
                cout << "\033[33m--\033[0m"; // желтая опасная зона
            }
        }
    }

    cout << "\033[37m]\033[0m";
    cout << " " << persuasionScore << "/100\n";

    // Пояснение шкалы
    //cout << "\033[37mЗоны: \033[31m0-49%: Провал \033[32m50-80%: Успех \033[33m81-100%: Опасность\033[0m\n";

    // Индикатор текущего положения
    string position = "\t>>";
    if (persuasionScore < 50) {
        cout << "\033[31m" << position << " СЛИШКОМ МАЛО\033[0m\n";
    }
    else if (persuasionScore <= 80) {
        cout << "\033[32m" << position << " ИДЕАЛЬНО\033[0m\n";
    }
    else {
        cout << "\033[33m" << position << " СЛИШКОМ МНОГО\033[0m\n";
    }
}

// Функция обновления шкалы убеждения
void UpdatePersuasion(int points) {
    persuasionScore += points;
    if (persuasionScore < 0) persuasionScore = 0;
    if (persuasionScore > 100) persuasionScore = 100;
}

// Функция отображения диалога NPC
void DisplayNPCDialog(const string& dialog) {
    cout << "\n\t\033[34m=== СОЛОВЕЙ ===\033[0m\n";
    cout << dialog << endl;
}

// Функция выбора игрока
int DisplayPlayerChoices(const vector<PlayerChoice>& choices, int currentRound) {
    cout << "\n\t\033[35m=== ВАШИ ВАРИАНТЫ ===\033[0m\n";

    // Перемешиваем варианты ответов для этого раунда
    vector<PlayerChoice> shuffledChoices = ShuffleChoices(choices);

    // Проверяем доступность варианта с золотом
    vector<bool> availableChoices;
    for (int i = 0; i < shuffledChoices.size(); i++) {
        bool available = true;
        // В раунде 7 вариант с золотом требует золото (определяем по persuasion = 8)
        if (currentRound == 7 && shuffledChoices[i].persuasion == 8 && !hasGold) {
            available = false;
        }
        availableChoices.push_back(available);

        if (available) {
            cout << i + 1 << ". " << shuffledChoices[i].text;
            // Показываем тип ответа с цветовой индикацией
            /*if (shuffledChoices[i].persuasion == 12) {
                cout << " \033[33m[Агрессивный +12%]\033[0m";
            }
            else if (shuffledChoices[i].persuasion == 8) {
                cout << " \033[32m[Оптимальный +8%]\033[0m";
            }
            else {
                cout << " \033[36m[Мямля +3%]\033[0m";
            }*/
            cout << endl;
        }
        else {
            cout << i + 1 << ". \t\033[31m[ЗАБЛОКИРОВАНО - нужен мешок золота]\033[0m " << shuffledChoices[i].text << endl;
        }
    }

    int choice;
    cout << "\n\033[37mВаш выбор (1-" << shuffledChoices.size() << "): \033[0m";
    cin >> choice;

    if (choice > 0 && choice <= shuffledChoices.size()) {
        if (availableChoices[choice - 1]) {
            PlayerChoice selected = shuffledChoices[choice - 1];
            cout << "\n\t\033[32m=== ИВАН ===\033[0m\n";
            cout << selected.text << endl;

            // Обновляем шкалу убеждения
            UpdatePersuasion(selected.persuasion);
            DisplayPersuasionMeter();

            // Проверяем провокацию боя (определяем по persuasion = 12 и nextRound = 10)
            if (currentRound == 8 && selected.persuasion == 12 && selected.nextRound == 10) {
                provokedFight = true;
            }

            return selected.nextRound;
        }
        else {
            cout << "\n\033[31mЭтот вариант недоступен!\033[0m\n";
            return currentRound; // Повторяем текущий раунд
        }
    }

    return currentRound; // При неверном вводе повторяем раунд
}

// Функция показа концовки
void ShowEnding() {
    cout << "\n\n\t\033[35m=== РЕЗУЛЬТАТ ===\033[0m\n";

    if (provokedFight) {
        cout << "\033[31m💢 ПРОВОКАЦИЯ БОЯ (81-100%)\033[0m\n";
        cout << "Соловей (лицо искажается гримасой ярости, он швыряет сундук (если был в руке) в сторону и хватается за саблю): ";
        cout << "И всё же, ты допизделся! Я не могу отпустить того, кто так нагло пытался меня попускать! ";
        cout << "За метлой следить надо, знаешь ли. Ну уж нет, я с тебя шкуру спущу и сделаю себе новые портки! СТОЙ И МОЛИСЬ!\n";
        cout << "(Начинается бой, цель не достигнута)\n";
    }
    else if (persuasionScore >= 50 && persuasionScore <= 80) {
        cout << "\033[32m✅ УСПЕХ (50-80%)\033[0m\n";
        cout << "Соловей (с протягивает сундук): Черт возьми, парень. В тебе есть сталь. ";
        cout << "Грязная, ржавая, но сталь. Держи свою пакость и катись отсюда. ";
        cout << "И если это кощей придет сюда с вопросами... Я тебя в глаза не видел. Понял?\n";
        cout << "(Иван получает сундук, цель достигнута!)\n";
    }
    else if (persuasionScore < 50) {
        cout << "\033[33m❌ ПРОВАЛ (0-49%)\033[0m\n";
        cout << "Соловей (прячет сундук за спину): Знаешь что, Ваня, ты – ходячая катастрофа. ";
        cout << "Иди ты нахер отсюда, пока я не передумал и не сделал из тебя новую мочалку для своей бани.\n";
        cout << "(Цель не достигнута)\n";
    }
    else {
        cout << "\033[31m💢 ПРОВОКАЦИЯ БОЯ (81-100%)\033[0m\n";
        cout << "Соловей (лицо искажается гримасой ярости): Ты перешел все границы! ";
        cout << "Тебе конец, мальчишка!\n";
        cout << "(Начинается бой, цель не достигнута)\n";
    }

    cout << "\n\tИтоговый счет убеждения: " << persuasionScore << "%\n";
}

// Основная функция игры
void PlayGame() {
    vector<Round> rounds;

    // Раунд 1
    rounds.push_back({
        "(Свистит так, что с деревьев осыпается хвоя) Ну-ка, рыло мещанское, объясни, как твоя пустая голова просочилась через моих ребят? И если скажешь 'заблудился', свищу последнюю колыбельную для твоих ушей.",
        {
            {"\"Твои ребята? Те, что щас по кустам храпят, с мордами, похожими на бифштекс? Я пришел по-хорошему, Соловей. Гони сюда сундук, ты знаешь о чем идет речь!\"", 12, 2},
            {"\"Заблудиться тут сложно, от твоего свиста даже комары в обморок падают. Я по делу. По поводу одного сундука, что у тебя пылится.\"", 8, 2},
            {"\"Меня Иван зовут. Может, поговорим? Мне тут сундучок один твой нужен, догадываешься какой?\"", 3, 2}
        }
        });

    // Раунд 2
    rounds.push_back({
        "(Усмехается, почесывая затылок) Ну ты Иван, наглец конечно. Знавал я тебя и батька твоего. Сундук? Ах ты ж, сундук… У меня их, как блох на бродячей собаке. Какой именно тебе слюнями приглянулся?",
        {
            {"\"Тот, что пахнет чужими слезами и старой костлявой смертью. Не тяни резину, у меня не вечность в запасе.\"", 12, 3},
            {"\"Деревянный, с железными углами. Говорят, внутри такая штука, от которой даже у тебя мурашки по спине побегут. Неудобный такой предмет.\"", 8, 3},
            {"\"Изысканный, с железными уголками. Он тебе не нужен, уж поверь.\"", 3, 3}
        }
        });

    // Раунд 3 (разные ответы в зависимости от предыдущего выбора)
    // Для простоты используем первый вариант ответа Соловья
    rounds.push_back({
        "(Морщится) Ишь какой нетерпеливый, ты свою прыть то поубавь, а то глядишь чего плохого произойдет с шкуркой-то твоей. А про мой сундук забудь!",
        {
            {"\"Этот сундук однажды ночью откусит тебе голову, а я предлагаю цивилизованный развод. Или ты предпочитаешь внезапные визиты?\"", 12, 4},
            {"\"Некоторые вещи, как гремучая змея в бардаке — лежит себе, лежит, а потом бац! — и ты уже не в состоянии читать утреннюю прессу. Я предлагаю тебе страховку.\"", 8, 4},
            {"\"Он опасен! Но я знаю как уберечь всех и вся от угрозы, которая нависает над ним. Я могу обезопасить тебя от последствий.\"", 3, 4}
        }
        });

    // Раунд 4
    rounds.push_back({
        "(Грозно) А я тебе сейчас бошку откушу! Угрожать мне вздумал? Ты по твоему с кем сейчас говоришь, мальчик?",
        {
            {"\"С тем, кто трещит, как испуганная сорока. Либо решаем вопрос сейчас, либо твои дела пойдут настолько плохо, что даже налоговая посчитает это дурным тоном.\"", 12, 5},
            {"\"С предпринимателем. А я — клиент с щекотливым предложением. В этом сундуке не золото, Соловей. Там кошмар наяву. И он на твоей территории.\"", 8, 5},
            {"\"С очень уважаемым человеком! Посмотри на это как на одолжение.\"", 3, 5}
        }
        });

    // Раунд 5
    rounds.push_back({
        "(Кидает кружку в ноги Ивану) Нихуя себе как мы заговорили! На кой хер тебе сдался этот сундук? Отвечай, чмо!",
        {
            {"\"Потому что тот, кто ее хочет, платит мне столько, что я смогу купить твой лес, вырубить его и построить здесь личный бордель для королевских гвардейцев. Интересуешься?\"", 12, 6},
            {"\"У меня есть клиент с очень специфическим вкусом. А у тебя — горячий товар, который протухнет прямо у тебя в руках, если не найти ему правильного... ценителя.\"", 8, 6},
            {"\"[Ложь] Это не для меня, это для отца!\"", 3, 6}
        }
        });

    // Раунд 6
    rounds.push_back({
        "(Грозно зыркнул) Ты ходишь по тонкому лезвию моего ножа, дружочек пирожочек. Тебе лучше заткнуться и проявить уважение!",
        {
            {"\"Уважение? Я не кланяюсь каждый раз, когда чиркаю спичкой. Уважение — это когда я не веду сюда целую роту стрельцов, пока мы тут треплемся.\"", 12, 7},
            {"\"Уважение в том, что я предлагаю сделку, а не просто ворую ночью. Моё уважение можно измерить в золотых рублях. Устраивает?\"", 8, 7},
            {"\"Вы здесь хозяин, не мне ставить под сомнение вашу репутацию.\"", 3, 7}
        }
        });

    // Раунд 7
    rounds.push_back({
        "(Резко встаёт, его тень накрывает Ивана) Да ты в край охуел, угрожать мне вздумал? Даю тебе последний шанс, пиздюк, что в сундуке?",
        {
            {"\"А это, тебя ебать не должно!\"", 12, 8},
            {"\"Такое, что делает твою жизнь короче, а мои предложения — привлекательнее. Не заглядывай в пасть к дракону, просто продай яйцо.\"", 8, 9}, // При наличии золота ведет к успеху
            {"\"Там буквально смерть. Но пока только твоя. Отдашь сундук и избежишь гибели.\"", 3, 8}
        }
        });

    // Раунд 8
    rounds.push_back({
        "(Тяжело вздыхая угрожающе подходит вплотную к Ивану) Не хотелось до этого доводить, из уважения к твоему отцу, но похоже тебе надо хорошенько так освистулиться.",
        {
            {"\"Попробуй, гниль лесная. И узнаешь, почему меня в деревне самым безбашенным считают. Этот сундук — единственное, что стоит между тобой и очень болезненным знакомством моего кулака.\"", 12, 10}, // Провоцирует бой
            {"\"Разумный ход. И последняя ошибка. Тот, кто посмотрит, уже не сможет ни о чем договориться. Это факт, а не угроза.\"", 8, 9},
            {"\"Ты не ведаешь что творишь, Соловей! Даю тебе последний шанс одуматься!\"", 3, 9}
        }
        });

    // Раунд 9
    rounds.push_back({
        "(Замирает, в глазах мелькает хищный интерес) Он кощею бессмертному, принадлежал что ли? Так-так... Дело пахнет настоящей жареной дичью.",
        {
            {"\"Бинго, папаша. И вот моё условие, либо ты отдаешь мне сундук, либо я снесу тебе свистульку.\"", 12, 10},
            {"\"Можно сказать и так. И теперь вопрос: Ты хочешь быть на стороне того, кто ищет, или на стороне того, кого ищут?\"", 8, 10},
            {"\"Я не знаю! Думай сам, да хорошенько так думай. Только в суп не попади.\"", 3, 10}
        }
        });

    // Раунд 10
    rounds.push_back({
        "(Медленно отходит к бочке и достает из-под нее небольшой, почерневший сундучок) Вот он, источник всего этого веселья. Но, ключа то нет и открыть его невозможно. Последний вопрос, Ваня. Что ты с ним сделаешь?",
        {
            {"\"Давай его уже сюда, заебал!\"", 12, -1},
            {"\"То, что должен. Устрою одному костлявому засранцу самый плохой день в его бесконечной жизни. А тебе совет — забудь, что вообще его видел.\"", 8, -1},
            {"\"[Ложь] Закопаю так глубоко, что сами черти не найдут. И мир станет чуть менее напряженным местом. Для всех нас.\"", 3, -1}
        }
        });

    // Игровой цикл
    int currentRound = 0;
    const int totalRounds = rounds.size();

    cout << "\t\033[36m=== ДИАЛОГ С СОЛОВЬЕМ-РАЗБОЙНИКОМ ===\033[0m\n";
    cout << "Цель: убедить Соловья отдать сундук со смертью Кощеевой\n";
    cout << "Оптимальная зона убеждения: \033[32m50-80%\033[0m\n";
    //cout << "\033[33m⚠️  Варианты ответов перемешиваются каждый раунд!\033[0m\n\n";

    // Игрок может начать с золотом (случайно или по выбору)
    srand(time(0));
    hasGold = (rand() % 2 == 0);
    if (hasGold) {
        cout << "\033[33mУ вас есть мешок золота! Вариант с подкупом доступен.\033[0m\n";
    }

    // Показываем начальную шкалу
    DisplayPersuasionMeter();

    while (currentRound >= 0 && currentRound < totalRounds) {
        DisplayNPCDialog(rounds[currentRound].npcDialog);
        int nextRound = DisplayPlayerChoices(rounds[currentRound].choices, currentRound + 1);

        if (nextRound == -1) break; // Конец диалога
        currentRound = nextRound - 1; // Переходим к следующему раунду

        // Проверяем не спровоцировали ли бой
        if (provokedFight) {
            break;
        }

        // Проверяем успех через подкуп в раунде 7 (определяем по persuasion = 8 и nextRound = 9)
        if (currentRound == 8 && hasGold) {
            // Ищем выбранный вариант с persuasion = 8
            for (const auto& choice : rounds[7].choices) {
                if (choice.persuasion == 8 && choice.nextRound == 9) {
                    persuasionScore = 70; // Устанавливаем успешный результат
                    break;
                }
            }
            break;
        }
    }

    // Показываем концовку
    ShowEnding();
}

int main() {
    setlocale(LC_ALL, "Russian");
    PlayGame();
    return 0;
}